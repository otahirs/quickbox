
name: Build Test
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-QtCache

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
        version: '5.15.0'
        host: 'linux'
          
    - name: get AppImageTool
      run: |
        curl --silent "https://api.github.com/repos/AppImage/AppImageKit/releases/latest" | jq -r '.assets[] | select(.name == "appimagetool-x86_64.AppImage").browser_download_url' | sudo xargs curl -L -o /opt/appimagetool-x86_64.AppImage --create-dirs --url
        sudo chmod +x /opt/appimagetool-x86_64.AppImage

    - name: test
      run: |
        sudo find / -name libpq.so*
        sudo find / -name libcrypto.so*
    
    - name: build AppImage
      if: false
      run: |
        mkdir ./build
        ./quickevent/make-dist.sh --src-dir . --qt-dir ${Qt5_DIR} --work-dir ./build --appimage-tool /opt/appimagetool-x86_64.AppImage
        
    - name: save AppImage
      uses: actions/upload-artifact@v2
      with:
        name: quickevent-${{ github.event_name }}-${{ github.sha }}.AppImage
        path: build/artifacts/quickevent-*-x86_64.AppImage
      
      
  build_windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: cmd
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-QtCache
 
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
        version: '5.15.0'
        host: 'windows'
        arch: 'win64_mingw81' 

    - name: configure
      if: false
      run: |
        qmake.exe quickbox.pro -spec win32-g++ "CONFIG+=release" "CONFIG+=qtquickcompiler" "CONFIG+=force_debug_info" 
        mingw32-make.exe qmake_all
        mingw32-make.exe -j4
  
    - name: test
      run: |
        sudo find / -name "libpq*dll"
        sudo find / -name "libcrypto*dll"
      shell: bash
 
    - name: find
      run: |
        dir ${{env.PGBIN}}

 
    - name: create installer
      run: |
        choco install innosetup --no-progress
        "C:\Program Files (x86)\Inno Setup 6\iscc.exe" "/DVERSION=test" "/DQT_DIR=${Qt5_DIR}" "/DSSL_DIR=C:\msys64\mingw32" "/DPSQL_DIR=${{env.PGBIN}}" quickevent/quickevent.iss
